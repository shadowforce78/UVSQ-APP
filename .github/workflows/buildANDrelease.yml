name: Build and Release

on:
  push:
    branches: [main]
    tags:
      - "v*"

jobs:
  build:
    name: Build (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"

      - name: Generate package-lock.json
        run: npm install --package-lock-only

      - name: Cache npm dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install Dependencies
        run: npm ci

      - name: Build Application
        run: npm run make
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Windows Artifacts
        if: ${{ matrix.os == 'windows-latest' }}
        uses: actions/upload-artifact@v3
        with:
          name: windows-build
          path: out/make/squirrel.windows/x64/*.exe

      - name: Upload Linux Artifacts
        if: ${{ matrix.os == 'ubuntu-latest' }}
        uses: actions/upload-artifact@v3
        with:
          name: linux-build
          path: out/make/**/*.deb

  create-release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')

    steps:
      - name: Download Windows Artifacts
        uses: actions/download-artifact@v3
        with:
          name: windows-build

      - name: Download Linux Artifacts
        uses: actions/download-artifact@v3
        with:
          name: linux-build

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            windows-build/*.exe
            linux-build/**/*.deb
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}